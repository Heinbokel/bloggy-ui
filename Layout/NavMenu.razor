@using bloggy_ui.Services

<nav class="navbar navbar-expand-lg navbar-light bg-primary fixed-bottom">
    <div class="container">
        <ul class="navbar-nav mx-auto">
            <li class="nav-item">
                <a class="nav-link text-white" href="#">Home <i class="fas fa-home fa-xl"></i></a>
            </li>
            @if (IsLoggedIn)
            {
                <li class="nav-item">
                    <a class="nav-link text-white" href="/user-profile">My Profile <i class="fas fa-user-alt fa-xl"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="/login" @onclick="Logout">Logout <i class="fas fa-sign-out-alt fa-xl"></i></a>
                </li>
            } else {
                <li class="nav-item">
                    <a class="nav-link text-white" href="/login">Login <i class="fas fa-user-alt fa-xl"></i></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="/register">Sign Up <i class="fas fa-user-edit fa-xl"></i></a>
                </li>
            }

        </ul>
    </div>
</nav>


@code {
    [Inject]
    private AuthService _authService { get; set; }

    private bool IsLoggedIn { get; set; } = false;

    /// <summary>
    /// Logic to run on the OnInitialized lifecycle hook.
    /// </summary>
    protected override void OnInitialized()
    {
        // Retrieves and subscribes to the user information observable in the auth service.
        // The nav bar will be able to update its links depending on if the user is logged in or out.
        this._authService.GetUserInformationAsync().Subscribe((userInfo) =>
        {
            IsLoggedIn = userInfo != null;
            StateHasChanged(); // This is required to tell our already rendered DOM to re-render with this new data.
        });
    }

    /// <summary>
    /// Triggers a call to the AuthService to log the user out.
    /// </summary>
    private async void Logout() {
        await this._authService.Logout();
    }
}
